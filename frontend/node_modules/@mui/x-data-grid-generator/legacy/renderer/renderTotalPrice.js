import * as React from 'react';
import clsx from 'clsx';
import { alpha, styled } from '@mui/material/styles';
import { jsx as _jsx } from "react/jsx-runtime";
var Value = styled('div')(function (_ref) {
  var theme = _ref.theme;
  return {
    width: '100%',
    height: '100%',
    lineHeight: '100%',
    paddingRight: 8,
    fontVariantNumeric: 'tabular-nums',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'flex-end',
    '&.good': {
      backgroundColor: alpha(theme.palette.success.main, 0.3)
    },
    '&.bad': {
      backgroundColor: alpha(theme.palette.error.main, 0.3)
    }
  };
});
var currencyFormatter = new Intl.NumberFormat('en-US', {
  style: 'currency',
  currency: 'USD'
});
var TotalPrice = /*#__PURE__*/React.memo(function TotalPrice(props) {
  var value = props.value;
  return /*#__PURE__*/_jsx(Value, {
    className: clsx(value > 1000000 && "good", value < 1000000 && "bad"),
    children: currencyFormatter.format(value)
  });
});
export function renderTotalPrice(params) {
  if (params.rowNode.isAutoGenerated || params.value == null) {
    return '';
  }

  return /*#__PURE__*/_jsx(TotalPrice, {
    value: params.value
  });
}