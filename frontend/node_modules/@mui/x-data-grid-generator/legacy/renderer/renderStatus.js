import * as React from 'react';
import ReportProblemIcon from '@mui/icons-material/ReportProblem';
import InfoIcon from '@mui/icons-material/Info';
import AutorenewIcon from '@mui/icons-material/Autorenew';
import DoneIcon from '@mui/icons-material/Done';
import Chip from '@mui/material/Chip';
import { styled } from '@mui/material/styles';
import { jsx as _jsx } from "react/jsx-runtime";
var StyledChip = styled(Chip)(function (_ref) {
  var theme = _ref.theme;
  return {
    justifyContent: 'left',
    '& .icon': {
      color: 'inherit'
    },
    '&.Open': {
      color: theme.palette.info.dark,
      border: "1px solid ".concat(theme.palette.info.main)
    },
    '&.Filled': {
      color: theme.palette.success.dark,
      border: "1px solid ".concat(theme.palette.success.main)
    },
    '&.PartiallyFilled': {
      color: theme.palette.warning.dark,
      border: "1px solid ".concat(theme.palette.warning.main)
    },
    '&.Rejected': {
      color: theme.palette.error.dark,
      border: "1px solid ".concat(theme.palette.error.main)
    }
  };
});
var Status = /*#__PURE__*/React.memo(function (props) {
  var status = props.status;
  var icon = null;

  if (status === 'Rejected') {
    icon = /*#__PURE__*/_jsx(ReportProblemIcon, {
      className: "icon"
    });
  } else if (status === 'Open') {
    icon = /*#__PURE__*/_jsx(InfoIcon, {
      className: "icon"
    });
  } else if (status === 'PartiallyFilled') {
    icon = /*#__PURE__*/_jsx(AutorenewIcon, {
      className: "icon"
    });
  } else if (status === 'Filled') {
    icon = /*#__PURE__*/_jsx(DoneIcon, {
      className: "icon"
    });
  }

  var label = status;

  if (status === 'PartiallyFilled') {
    label = 'Partially Filled';
  }

  return /*#__PURE__*/_jsx(StyledChip, {
    className: status,
    icon: icon,
    size: "small",
    label: label,
    variant: "outlined"
  });
});
export function renderStatus(params) {
  if (params.rowNode.isAutoGenerated || params.value == null) {
    return '';
  }

  return /*#__PURE__*/_jsx(Status, {
    status: params.value
  });
}